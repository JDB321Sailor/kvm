version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: jetkvm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    networks:
      - jetkvm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--no-check-certificate", "https://localhost:443/"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: jetkvm-postgres
    environment:
      POSTGRES_USER: jetkvm
      POSTGRES_PASSWORD: your_secure_postgres_password_here
      POSTGRES_DB: jetkvm
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jetkvm
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jetkvm -d jetkvm"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-migrate:
    image: jetkvm-cloud-api:latest
    container_name: jetkvm-api-migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://jetkvm:your_secure_postgres_password_here@postgres:5432/jetkvm?schema=public"
    env_file:
      - ./cloud-api/.env
    networks:
      - jetkvm
    command: ["npx", "prisma", "migrate", "deploy"]
    restart: "no"

  api:
    image: jetkvm-cloud-api:latest
    container_name: jetkvm-api
    depends_on:
      postgres:
        condition: service_healthy
      api-migrate:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: "postgresql://jetkvm:your_secure_postgres_password_here@postgres:5432/jetkvm?schema=public"
      API_HOSTNAME: "https://${LOCAL_IP:-192.168.1.3}/api"
      APP_HOSTNAME: "https://${LOCAL_IP:-192.168.1.3}"
      COOKIE_SECRET: "your_secure_cookie_secret_here"
      CORS_ORIGINS: "https://${LOCAL_IP:-192.168.1.3},http://localhost:8080,http://localhost:3000,http://localhost:5173"
      NODE_ENV: production
    env_file:
      - ./cloud-api/.env
    networks:
      - jetkvm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: jetkvm-ui:latest
    container_name: jetkvm-frontend
    depends_on:
      api:
        condition: service_healthy
    environment:
      - VITE_CLOUD_API=https://${LOCAL_IP:-192.168.1.3}/api
    networks:
      - jetkvm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  jetkvm:
    driver: bridge
